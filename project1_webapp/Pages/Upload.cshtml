
@page
@using Microsoft.Extensions.Caching.Memory
@model UploadModel
@inject IConfiguration Configuration
@inject IMemoryCache MemoryCache
@{
    ViewData["Title"] = "Image Analysis";
}
<h1>@ViewData["Title"]</h1>

<p>Use this page to upload an image for analysis. Your image will not be saved.</p>
<p>Currently accepts jpg and png formats.</p>
<form method="post" enctype="multipart/form-data">
    <div class="form-group">
        <input type="file" name="UploadFile" />
    </div>
    <button type="submit" class="btn btn-primary">Upload</button>
    <div></div>
</form>

@if (Model.imageDataUrl != null) {

    if (Model.imageDataUrl == "data:image/jpg;base64,") {
        <h2>Could not display this image. Try a different image.</h2>
    } else {
        <img class="img-thumbnail" src="@Model.imageDataUrl"
        onmouseover='this.src="@Model.imageDataWithObjectUrl"'
        onmouseout='this.src="@Model.imageDataUrl"' />
    }

}


@if (Model.visionResponse != null && Model.visionResponse.RequestId != null) {
        
    <h4>Generated Description</h4>

    if (Model.visionResponse.Description.Captions != null) { 
        foreach (var item in Model.visionResponse.Description.Captions) {
            <div>@item.Text</div>
            <div>Confidence: %@Math.Round(item.Confidence*100, 2)</div>
        }
    }

    <h4>Image Tag Predictions</h4>

    foreach (var item in Model.visionResponse.Tags) {
        <div>@item.Name - Confidence: %@Math.Round(item.Confidence*100, 2)</div>
    }

    <h4>Image Object Predictions</h4>

    foreach (var item in Model.visionResponse.Objects) {
        <div>@item.ObjectProperty - Confidence: %@Math.Round(item.Confidence*100, 2)</div>
    }

}

